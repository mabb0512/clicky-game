{"version":3,"sources":["components/CatCard/CatCard.js","components/NavBar/NavBar.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["CatCard","props","react_default","a","createElement","className","onClick","clickCat","alt","id","src","image","NavBar","score","Wrapper","children","App","state","cats","clickedCats","event","chosenCat","target","_this","indexOf","setState","sort","Math","random","alert","concat","_this2","this","components_NavBar_NavBar","components_Wrapper_Wrapper","map","cat","components_CatCard_CatCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"yjCAWeA,SARC,SAAAC,GAAK,OACnBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAASL,EAAMM,UACnCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKI,IAAKP,EAAMQ,GAAIC,IAAKT,EAAMU,YCItBC,SAPA,SAAAX,GAAK,OAAKC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACxCH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,eACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,UAAoCJ,EAAMY,WCD5BC,SAFC,SAAAb,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,mBCmE1CC,oNA7DbC,MAAQ,CACNC,OACAC,YAAa,GACbN,MAAO,KAGTN,SAAW,SAAAa,GAET,IAAMC,EAAYD,EAAME,OAAOd,IACZe,EAAKN,MAAME,YAAYK,QAAQH,IAAc,GAG9DE,EAAKE,SAAS,CACZP,KAAMK,EAAKN,MAAMC,KAAKQ,KAAK,iBAAM,GAAMC,KAAKC,WAC5CT,YAAa,GACbN,MAAO,IAGTgB,MAAM,yBAGNN,EAAKE,SACH,CACEP,KAAMK,EAAKN,MAAMC,KAAKQ,KAAK,iBAAM,GAAMC,KAAKC,WAC5CT,YAAaI,EAAKN,MAAME,YAAYW,OAClCT,GAEFR,MAAOU,EAAKN,MAAMJ,MAAQ,GAE5B,WAC2B,KAArBU,EAAKN,MAAMJ,QACXgB,MAAM,iBACNN,EAAKE,SAAS,CACdP,KAAMK,EAAKN,MAAMC,KAAKQ,KAAK,iBAAM,GAAMC,KAAKC,WAC5CT,YAAa,GACbN,MAAO,gFAOV,IAAAkB,EAAAC,KACP,OACE9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6B,EAAD,CAAQpB,MAAOmB,KAAKf,MAAMJ,QAC1BX,EAAAC,EAAAC,cAAC8B,EAAD,KACCF,KAAKf,MAAMC,KAAKiB,IAAI,SAAAC,GAAG,OACtBlC,EAAAC,EAAAC,cAACiC,EAAD,CACE9B,SAAUwB,EAAKxB,SACfE,GAAI2B,EAAI3B,GACR6B,IAAKF,EAAI3B,GACTE,MAAOyB,EAAIzB,mBAtDL4B,cCDlBC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.57094c24.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CatCard.css\";\n\nconst CatCard = props => (\n  <div className=\"card\" onClick={props.clickCat}>\n    <div className=\"img-container\">\n      <img alt={props.id} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default CatCard;\n","import React from \"react\";\nimport \"./NavBar.css\";\n\nconst NavBar = props =>  <nav className=\"navbar navbar-default navbar-fixed-top\">\n<ul>\n <li className=\"align-left\">Clicky Game</li>\n <li className=\"align-right\">Score: {props.score}</li>\n</ul>\n</nav>;\n\nexport default NavBar;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport CatCard from \"./components/CatCard\";\nimport NavBar from \"./components/NavBar\"\nimport Wrapper from \"./components/Wrapper\";\nimport cats from \"./data.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {\n    cats,\n    clickedCats: [],\n    score: 0\n  };\n\n  clickCat = event => {\n\n    const chosenCat = event.target.alt;\n    const catClicked = this.state.clickedCats.indexOf(chosenCat) > -1;\n\n    if (catClicked) {\n      this.setState({\n        cats: this.state.cats.sort(() => 0.5 - Math.random()),\n        clickedCats: [],\n        score: 0\n      });\n\n      alert(\"You lose. Try Again!\");\n        \n    } else {\n      this.setState(\n        {\n          cats: this.state.cats.sort(() => 0.5 - Math.random()),\n          clickedCats: this.state.clickedCats.concat(\n            chosenCat\n          ),\n          score: this.state.score + 1\n        },\n        () => {\n          if (this.state.score === 12) {\n              alert(\"Yay! You Win!\");\n              this.setState({\n              cats: this.state.cats.sort(() => 0.5 - Math.random()),\n              clickedCats: [],\n              score: 0\n            });\n          }\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar score={this.state.score}/>\n        <Wrapper>\n        {this.state.cats.map(cat => (\n          <CatCard\n            clickCat={this.clickCat}\n            id={cat.id}\n            key={cat.id}\n            image={cat.image}\n          />\n        ))}\n      </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//render the App.js file to the root element \nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}